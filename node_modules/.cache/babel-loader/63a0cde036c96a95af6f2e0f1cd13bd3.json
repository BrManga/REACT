{"ast":null,"code":"var _jsxFileName = \"/home/bora/Desktop/confusion/Ristorante Con Fusion - React/src/components/DishdetailComponent.js\";\nimport React, { Component } from \"react\";\nimport \"../css/dishdetail.css\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, Col, Row, Label } from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = () => {\n      this.setState({\n        toggle: this.state.toggle ? false : true\n      });\n    };\n\n    this.handleForm = values => {\n      if (values != null && values.length > 0) {\n        console.log(\"curren State is\" + JSON.stringify(values));\n        alert(\"curren State is\" + JSON.stringify(values));\n      }\n    };\n\n    this.state = {\n      toggle: false\n    };\n    this.handleModal = this.handleModal.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      values: 15,\n      onClick: this.handleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), \" Submit Comment\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(LocalForm, {\n      onSubmit: values => this.handleForm(values),\n      className: \"localform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Your Name\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Control.text, {\n      model: \".firstname\",\n      id: \"username\",\n      name: \"username\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".firstname\",\n      show: \"touched\",\n      messages: {\n        required: \"Required\",\n        minLength: \"Must be greater than 2 characters\",\n        maxLength: \"Must be 15 characters or less\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Your Feedback\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Control.textarea, {\n      model: \".message\",\n      id: \"message\",\n      name: \"message\",\n      rows: \"12\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Submit\"))))));\n  }\n\n}\n\nfunction RenderDish({\n  dish\n}) {\n  return React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    top: true,\n    src: dish.image,\n    alt: dish.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, dish.name), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, dish.description))));\n}\n\nfunction RenderComments({\n  comments\n}) {\n  if (comments != null) {\n    return React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, comments.map(comment => {\n      return React.createElement(\"li\", {\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, comment.comment), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"-- \", comment.author, \", \"));\n    })), React.createElement(CommentForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }));\n  } else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  });\n}\n\nconst DishDetail = props => {\n  if (props.dish != null) return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(BreadcrumbItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Menu\")), React.createElement(BreadcrumbItem, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, props.dish.name)), React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, props.dish.name), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(RenderDish, {\n    dish: props.dish,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(RenderComments, {\n    comments: props.comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })));else return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  });\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["/home/bora/Desktop/confusion/Ristorante Con Fusion - React/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Button","Modal","Col","Row","Label","Control","LocalForm","Errors","Link","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","handleModal","setState","toggle","state","handleForm","values","console","log","JSON","stringify","alert","bind","render","RenderDish","dish","image","name","description","RenderComments","comments","map","comment","id","author","DishDetail"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../css/dishdetail.css\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Modal,\n  Col,\n  Row,\n  Label\n} from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || val.length <= len;\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggle: false\n    };\n    this.handleModal = this.handleModal.bind(this);\n  }\n  handleModal = () => {\n    this.setState({ toggle: this.state.toggle ? false : true });\n  };\n  handleForm = values => {\n    if (values != null && values.length > 0) {\n      console.log(\"curren State is\" + JSON.stringify(values));\n      alert(\"curren State is\" + JSON.stringify(values));\n    }\n  };\n  render() {\n    return (\n      <div>\n        <Button outline values={15} onClick={this.handleModal}>\n          <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\n        </Button>\n        <div>\n          <Modal isOpen={this.state.toggle}>\n            <LocalForm\n              onSubmit={values => this.handleForm(values)}\n              className={\"localform\"}\n            >\n              <p className=\"form-group\">\n                <Label htmlFor=\"username\">Your Name</Label>\n              </p>\n              <p>\n                <Control.text\n                  model=\".firstname\"\n                  id=\"username\"\n                  name=\"username\"\n                  placeholder=\"Your Name\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(15)\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".firstname\"\n                  show=\"touched\"\n                  messages={{\n                    required: \"Required\",\n                    minLength: \"Must be greater than 2 characters\",\n                    maxLength: \"Must be 15 characters or less\"\n                  }}\n                />\n              </p>\n\n              <p className=\"form-group\">\n                <Label htmlFor=\"message\">Your Feedback</Label>\n                <Col>\n                  <Control.textarea\n                    model=\".message\"\n                    id=\"message\"\n                    name=\"message\"\n                    rows=\"12\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </p>\n              <p className=\"form-group\">\n                <Button type=\"submit\" color=\"primary\">\n                  Submit\n                </Button>\n              </p>\n            </LocalForm>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\nfunction RenderDish({ dish }) {\n  return (\n    <div className=\"col-12 col-md-5 m-1\">\n      <Card>\n        <CardImg top src={dish.image} alt={dish.name} />\n        <CardBody>\n          <CardTitle>{dish.name}</CardTitle>\n          <CardText>{dish.description}</CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nfunction RenderComments({ comments }) {\n  if (comments != null) {\n    return (\n      <div className=\"col-12 col-md-5 m-1\">\n        <h4>Comments</h4>\n        <ul className=\"list-unstyled\">\n          {comments.map(comment => {\n            return (\n              <li key={comment.id}>\n                <p>{comment.comment}</p>\n                <p>\n                  -- {comment.author}, {}\n                </p>\n              </li>\n            );\n          })}\n        </ul>\n        <CommentForm />\n      </div>\n    );\n  } else return <div></div>;\n}\n\nconst DishDetail = props => {\n  if (props.dish != null)\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/menu\">Menu</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>{props.dish.name}</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderDish dish={props.dish} />\n          <RenderComments comments={props.comments} />\n        </div>\n      </div>\n    );\n  else return <div></div>;\n};\n\nexport default DishDetail;\n"]},"metadata":{},"sourceType":"module"}