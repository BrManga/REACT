{"ast":null,"code":"var _jsxFileName = \"/home/bora/Desktop/confusion/confusion_1/src/components/DishdetailComponent.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardBody, CardText, CardTitle } from \"reactstrap\";\n\nclass Dishdetail extends Component {\n  renderComments(comments) {\n    if (comments == null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      });\n    }\n\n    const cmnts = comments.map(comment => {\n      return React.createElement(\"li\", {\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, comment.comment), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"-- \", comment.author, \", \\xA0\", new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"2-digit\"\n      }).format(new Date(comment.date))));\n    });\n    return React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" Comments \"), React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, cmnts));\n  }\n\n  renderDish(dish) {\n    if (dish != null) {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        width: \"100%\",\n        src: dish.image,\n        alt: dish.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, dish.name), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, dish.description))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    const dish = this.props.dish;\n\n    if (dish == null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n\n    const dishItem = this.renderDish(dish);\n    const commentItem = this.renderComments(dish.comments);\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, dishItem, commentItem);\n  }\n\n}\n\nexport default Dishdetail;","map":{"version":3,"sources":["/home/bora/Desktop/confusion/confusion_1/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardBody","CardText","CardTitle","Dishdetail","renderComments","comments","cmnts","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","date","renderDish","dish","image","name","description","render","props","dishItem","commentItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,SAA5C,QAA6D,YAA7D;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AACjCO,EAAAA,cAAc,CAACC,QAAD,EAAW;AACvB,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,UAAMC,KAAK,GAAGD,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAI;AACpC,aACE;AAAI,QAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,OAAO,CAACA,OAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACMA,OAAO,CAACE,MADd,YAEG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAChCC,QAAAA,IAAI,EAAE,SAD0B;AAEhCC,QAAAA,KAAK,EAAE,MAFyB;AAGhCC,QAAAA,GAAG,EAAE;AAH2B,OAAjC,EAIEC,MAJF,CAIS,IAAIC,IAAJ,CAAST,OAAO,CAACU,IAAjB,CAJT,CAFH,CAFF,CADF;AAaD,KAda,CAAd;AAeA,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BZ,KAA/B,CAFF,CADF;AAMD;;AAEDa,EAAAA,UAAU,CAACC,IAAD,EAAO;AACf,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAuC,QAAA,GAAG,EAAED,IAAI,CAACE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYF,IAAI,CAACE,IAAjB,CADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWF,IAAI,CAACG,WAAhB,CAFF,CAFF,CADF,CADF;AAWD,KAZD,MAYO;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMJ,IAAI,GAAG,KAAKK,KAAL,CAAWL,IAAxB;;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,UAAMM,QAAQ,GAAG,KAAKP,UAAL,CAAgBC,IAAhB,CAAjB;AACA,UAAMO,WAAW,GAAG,KAAKvB,cAAL,CAAoBgB,IAAI,CAACf,QAAzB,CAApB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGqB,QADH,EAEGC,WAFH,CADF;AAMD;;AA3DgC;;AA8DnC,eAAexB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, CardImg, CardBody, CardText, CardTitle } from \"reactstrap\";\n\nclass Dishdetail extends Component {\n  renderComments(comments) {\n    if (comments == null) {\n      return <div></div>;\n    }\n    const cmnts = comments.map(comment => {\n      return (\n        <li key={comment.id}>\n          <p>{comment.comment}</p>\n          <p>\n            -- {comment.author}, &nbsp;\n            {new Intl.DateTimeFormat(\"en-US\", {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"2-digit\"\n            }).format(new Date(comment.date))}\n          </p>\n        </li>\n      );\n    });\n    return (\n      <div className=\"col-12 col-md-5 m-1\">\n        <h4> Comments </h4>\n        <ul className=\"list-unstyled\">{cmnts}</ul>\n      </div>\n    );\n  }\n\n  renderDish(dish) {\n    if (dish != null) {\n      return (\n        <div className=\"col-12 col-md-5 m-1\">\n          <Card>\n            <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n            <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>{dish.description}</CardText>\n            </CardBody>\n          </Card>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n\n  render() {\n    const dish = this.props.dish;\n    if (dish == null) {\n      return <div></div>;\n    }\n    const dishItem = this.renderDish(dish);\n    const commentItem = this.renderComments(dish.comments);\n    return (\n      <div className=\"row\">\n        {dishItem}\n        {commentItem}\n      </div>\n    );\n  }\n}\n\nexport default Dishdetail;\n"]},"metadata":{},"sourceType":"module"}