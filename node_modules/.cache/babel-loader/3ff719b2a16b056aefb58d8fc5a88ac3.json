{"ast":null,"code":"var _jsxFileName = \"/home/bora/Desktop/confusion/Ristorante Con Fusion - React/src/components/MainComponent.js\";\nimport React, { Component } from \"react\";\nimport Home from \"./HomeComponent\";\nimport Menu from \"./MenuComponent\";\nimport Contact from \"./ContactComponent\";\nimport DishDetail from \"./DishdetailComponent\";\nimport Header from \"./HeaderComponent\";\nimport Footer from \"./FooterComponent\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport About from \"./AboutComponent\";\nimport { actions } from \"react-redux-form\";\nimport { addComment, fetchDishes, fetchComments, fetchPromos } from \"../redux/ActionCreators\";\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\n  fetchDishes: () => {\n    dispatch(fetchDishes());\n  },\n  resetFeedbackForm: () => {\n    dispatch(actions.reset(\"feedback\"));\n  },\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos())\n});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n  }\n\n  render() {\n    const HomePage = () => {\n      return React.createElement(Home, {\n        dish: this.props.dishes.dishes.filter(dish => dish.featured)[0],\n        dishesLoading: this.props.dishes.isLoading,\n        dishErrMess: this.props.dishes.errMess,\n        promotion: this.props.promotions.promotions.filter(promo => promo.featured)[0],\n        promoLoading: this.props.promotions.isLoading,\n        promoErrMess: this.props.promotions.errMess,\n        leader: this.props.leaders.filter(leader => leader.featured)[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    };\n\n    const DishWithId = ({\n      match\n    }) => {\n      return React.createElement(DishDetail, {\n        dish: this.props.dishes.dishes.filter(dish => dish.id === parseInt(match.params.dishId, 10))[0],\n        isLoading: this.props.dishes.isLoading,\n        errMess: this.props.dishes.errMess,\n        comments: this.props.comments.comments.filter(comment => comment.dishId === parseInt(match.params.dishId, 10)),\n        commentsErrMess: this.props.comments.errMess,\n        addComment: this.props.addComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/home\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/aboutus\",\n      component: () => React.createElement(About, {\n        leaders: this.props.leaders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \"} />\", React.createElement(Route, {\n      exact: true,\n      path: \"/menu\",\n      component: () => React.createElement(Menu, {\n        dishes: this.props.dishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/menu/:dishId\",\n      component: DishWithId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/contactus\",\n      component: () => React.createElement(Contact, {\n        resetFeedbackForm: this.props.resetFeedbackForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["/home/bora/Desktop/confusion/Ristorante Con Fusion - React/src/components/MainComponent.js"],"names":["React","Component","Home","Menu","Contact","DishDetail","Header","Footer","Switch","Route","Redirect","withRouter","connect","About","actions","addComment","fetchDishes","fetchComments","fetchPromos","mapStateToProps","state","dishes","comments","promotions","leaders","mapDispatchToProps","dispatch","dishId","rating","author","comment","resetFeedbackForm","reset","Main","constructor","props","componentDidMount","render","HomePage","filter","dish","featured","isLoading","errMess","promo","leader","DishWithId","match","id","parseInt","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Home from \"./HomeComponent\";\nimport Menu from \"./MenuComponent\";\nimport Contact from \"./ContactComponent\";\nimport DishDetail from \"./DishdetailComponent\";\nimport Header from \"./HeaderComponent\";\nimport Footer from \"./FooterComponent\";\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport About from \"./AboutComponent\";\nimport { actions } from \"react-redux-form\";\nimport {\n  addComment,\n  fetchDishes,\n  fetchComments,\n  fetchPromos\n} from \"../redux/ActionCreators\";\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  addComment: (dishId, rating, author, comment) =>\n    dispatch(addComment(dishId, rating, author, comment)),\n  fetchDishes: () => {\n    dispatch(fetchDishes());\n  },\n  resetFeedbackForm: () => {\n    dispatch(actions.reset(\"feedback\"));\n  },\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos())\n});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n  }\n  render() {\n    const HomePage = () => {\n      return (\n        <Home\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishErrMess={this.props.dishes.errMess}\n          promotion={\n            this.props.promotions.promotions.filter(promo => promo.featured)[0]\n          }\n          promoLoading={this.props.promotions.isLoading}\n          promoErrMess={this.props.promotions.errMess}\n          leader={this.props.leaders.filter(leader => leader.featured)[0]}\n        />\n      );\n    };\n\n    const DishWithId = ({ match }) => {\n      return (\n        <DishDetail\n          dish={\n            this.props.dishes.dishes.filter(\n              dish => dish.id === parseInt(match.params.dishId, 10)\n            )[0]\n          }\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter(\n            comment => comment.dishId === parseInt(match.params.dishId, 10)\n          )}\n          commentsErrMess={this.props.comments.errMess}\n          addComment={this.props.addComment}\n        />\n      );\n    };\n    return (\n      <div>\n        <Header />\n        <div>\n          <Switch>\n            <Route path=\"/home\" component={HomePage} />\n            <Route\n              exact\n              path=\"/aboutus\"\n              component={() => <About leaders={this.props.leaders} />}\n            />\n            } />\n            <Route\n              exact\n              path=\"/menu\"\n              component={() => <Menu dishes={this.props.dishes} />}\n            />\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\n            <Route\n              exact\n              path=\"/contactus\"\n              component={() => (\n                <Contact resetFeedbackForm={this.props.resetFeedbackForm} />\n              )}\n            />\n            <Redirect to=\"/home\" />\n          </Switch>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Main)\n);\n"]},"metadata":{},"sourceType":"module"}