{"ast":null,"code":"import _defineProperty from \"/home/bora/Desktop/confusion/Ristorante Con Fusion - React/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from \"./ActionTypes\";\nexport const Comments = (state = {\n  errMess: null,\n  comments: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return _objectSpread({}, state, {\n        errMess: null,\n        comments: action.payload\n      });\n\n    case ActionTypes.COMMENTS_FAILED:\n      return _objectSpread({}, state, {\n        errMess: action.payload\n      });\n\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload;\n      comment.id = state.comments.length;\n      comment.date = new Date().toISOString();\n      return _objectSpread({}, state, {\n        comments: state.comments.concat(comment)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/bora/Desktop/confusion/Ristorante Con Fusion - React/src/redux/comments.js"],"names":["ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","payload","COMMENTS_FAILED","ADD_COMMENT","comment","id","length","date","Date","toISOString","concat"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,QAAQ,EAAE;AAA3B,CAAT,EAA0CC,MAA1C,KAAqD;AAC3E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,YAAjB;AACE,+BAAYL,KAAZ;AAAmBC,QAAAA,OAAO,EAAE,IAA5B;AAAkCC,QAAAA,QAAQ,EAAEC,MAAM,CAACG;AAAnD;;AAEF,SAAKR,WAAW,CAACS,eAAjB;AACE,+BAAYP,KAAZ;AAAmBC,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAAnC;;AAEF,SAAKR,WAAW,CAACU,WAAjB;AACE,UAAIC,OAAO,GAAGN,MAAM,CAACG,OAArB;AACAG,MAAAA,OAAO,CAACC,EAAR,GAAaV,KAAK,CAACE,QAAN,CAAeS,MAA5B;AACAF,MAAAA,OAAO,CAACG,IAAR,GAAe,IAAIC,IAAJ,GAAWC,WAAX,EAAf;AACA,+BAAYd,KAAZ;AAAmBE,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAea,MAAf,CAAsBN,OAAtB;AAA7B;;AAEF;AACE,aAAOT,KAAP;AAdJ;AAgBD,CAjBM","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\n\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return { ...state, errMess: null, comments: action.payload };\n\n    case ActionTypes.COMMENTS_FAILED:\n      return { ...state, errMess: action.payload };\n\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload;\n      comment.id = state.comments.length;\n      comment.date = new Date().toISOString();\n      return { ...state, comments: state.comments.concat(comment) };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}